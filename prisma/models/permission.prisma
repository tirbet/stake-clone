model Permission {
  id       String             @id @default(uuid())
  resource PermissionResource
  actions  PermissionAction[]
  roleId   String
  role     Role               @relation(fields: [roleId], references: [id], onDelete: Cascade)
}

enum PermissionAction {
  READ
  CREATE
  UPDATE
  DELETE
}

enum PermissionResource {
  API_KEY
  SETTINGS
  MANAGE_ROLE
  PERMISSIONS
  LICENSE
  PARTNER
  CMS
  MARKETING
  PLAYER
  PLAYER_PROFILE
  PLAYER_VERIFICATION
  PLAYER_SESSION
  AFFILIATE
  VIP_MANAGEMENT
  REFERRAL
  LOYALTY
  CHAT_MODERATION
  WALLET
  TRANSACTION
  DEPOSIT
  WITHDRAWAL
  BONUS
  PROMOTION
  CURRENCY
  PAYMENT_PROVIDER
  PAYMENT_GATEWAY
  FEE_MANAGEMENT
  CHARGEBACK
  SPORTSBOOK
  BET
  BET_SETTLEMENT
  CASINO_GAME
  CASINO_PROVIDER
  GAME_CATEGORY
  GAME_CONFIG
  JACKPOT
  TOURNAMENT
  LOTTERY
  ESPORTS
  KYC
  AML
  FRAUD_MONITORING
  RESPONSIBLE_GAMBLING
  LIMITS
  RISK_MANAGEMENT
  AUDIT
  SUPPORT_TICKET
  LIVE_CHAT
  ANNOUNCEMENT
  EMAIL_CAMPAIGN
  NOTIFICATION
  REPORTS
  ANALYTICS
  DASHBOARD
  LOGS
  MONITORING
  CRONJOB
  CACHE
  WEBHOOK
  DEV_TOOLS
}
